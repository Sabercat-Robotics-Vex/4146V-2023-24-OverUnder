{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable type=\"broadcast_msg\" id=\"t-iua#?wv`;!]!:p~;m#\">CenterStop</variable><variable type=\"boolean\" id=\"Jf*O)alFb`^3V?yo-SEv\">launcherOn</variable><variable type=\"boolean\" id=\"N-FzHtb_DzMsX8Gy:f^.\">centerLock</variable><variable type=\"boolean\" id=\"_Lm_omh?x5t:%/bJv@$d\">autonStarted</variable><variable type=\"boolean\" id=\"XAbd!D1T,C=ULD^JkLZ|\">autonEnable</variable></variables><block type=\"procedures_definition\" id=\"L.[f91Ovh8C|n*Y[26#k\" x=\"-370\" y=\"3030\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"O([Z%~az@[8(Di6EKRV5\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"fireOne\" proceduredefid=\"O([Z%~az@[8(Di6EKRV5\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"v5_sensing_set_shaft_encoder_position\" id=\"[va!G?U55vThL{hql+q2\"><field name=\"ENCODER\">EncoderC</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"5H+Kzh`mON=WOLfj]-?,\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"Gy;B?UVp%KwEqL35*;Og\"><field name=\"MOTOR\">MtrGrpLauncher</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait_until\" id=\"d+.4wjf0BkcOb.2F/`z=\"><value name=\"CONDITION\"><block type=\"v5_operator_greater_than\" id=\"5n=DtrL?7uXHOvXLyKI4\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_function\" id=\"pRR`(?%E}9!.FryxFra2\"><field name=\"OPERATOR\">abs</field><value name=\"NUM\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_shaft_encoder\" id=\"j`k(eM3Vwo(V6Ke(H[qR\"><field name=\"ENCODER\">EncoderC</field><field name=\"UNITS\">deg</field></block></value></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"OU6E+lazK~tOmn3m.0!j\"><field name=\"NUM\">340</field></shadow></value></block></value><next><block type=\"v5_motion_stop_motor\" id=\";Ey5CEKp#;Ko!,]2Nu8}\"><field name=\"MOTOR\">MtrGrpLauncher</field></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"E5w|1h4it0?Cg.pjs9Ft\" x=\"730\" y=\"3170\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonY</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"procedures_call\" id=\"K~9F!$tqOOCjc=*(C.v2\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"fireOne\" proceduredefid=\"O([Z%~az@[8(Di6EKRV5\" argumentids=\"[]\" warp=\"false\"></mutation></block></next></block><block type=\"v5_events_when_driver\" id=\"G8rMPn!;vZMxd:zT^pR-\" x=\"930\" y=\"3250\"><next><block type=\"v5_variables_set_boolean_variable\" id=\"])cTkTeHq;0LZ8~A=;g-\"><field name=\"VARIABLE\" id=\"Jf*O)alFb`^3V?yo-SEv\" variabletype=\"boolean\">launcherOn</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"Ze*#{]*gu@gK5RI2d8*~\"><field name=\"VALUE\">false</field></shadow></value></block></next></block><block type=\"v5_events_when_controller_button\" id=\"rD.)8Bv0J2u`BP9_Q791\" x=\"230\" y=\"3310\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonA</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\"N`K_;dsZ=V.St1CNIQ.+\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"@R/%K:4=]6Lb-233|AnA\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"rq{`7l|Q1d;fiP`S(hws\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonB</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then_else\" id=\"g$Y[z3eKKexVV)X?OfiI\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\"9PK8jK66+lYA:HZ79-NF\"><field name=\"VARIABLE\" id=\"Jf*O)alFb`^3V?yo-SEv\" variabletype=\"boolean\">launcherOn</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"TxrzDn[0g.zLzjNZ`2y*\"><field name=\"MOTOR\">MtrGrpLauncher</field><next><block type=\"v5_variables_set_boolean_variable\" id=\"z=K:jXZLOg?jRbbPxSR@\"><field name=\"VARIABLE\" id=\"Jf*O)alFb`^3V?yo-SEv\" variabletype=\"boolean\">launcherOn</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"-o({n~Zj3IAXdgcH,x6N\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_motion_spin\" id=\")k4VQ)FwkCtvx``7L8)E\"><field name=\"MOTOR\">MtrGrpLauncher</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_variables_set_boolean_variable\" id=\"ohhR5V7`Rkx**q,VbAe2\"><field name=\"VARIABLE\" id=\"Jf*O)alFb`^3V?yo-SEv\" variabletype=\"boolean\">launcherOn</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"iOM5D[gI@!2#qD5Pu0k5\"><field name=\"VALUE\">true</field></shadow></value></block></next></block></statement></block></statement><next><block type=\"v5_control_wait_until\" id=\"1dPz{1+f2ENXt{!yHw44\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"wlbC|?f0W|M!qeJE[spi\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"GR3b6zwq|#(BCKvyvUh^\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonA</field></block></value></block></value></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\"A4[%Xzv@%CVabt8fT%s)\" x=\"1410\" y=\"3250\"><next><block type=\"v5_drivetrain_drive_for\" id=\"NH~HpzKwD(`CSbh~WIZX\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\",{z-/|#7@96h8stLUUJM\"><field name=\"NUM\">31</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"V@|HV.Qi:C(jn6VqIlKs\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"oI+2Elt7~}@CzcABN%/2\"><field name=\"NUM\">31</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"~!GA`!t|KCGbrulb-N`~\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"|4U+;GGz!p[oGV(B*^hv\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_sensing_set_digital_out\" id=\"E:DCWS0DPwV7TN-O%x:s\"><field name=\"DIGITALOUT\">SolonoidR</field><field name=\"STATE\">high</field><next><block type=\"v5_drivetrain_drive_for\" id=\"4y3aH;:}],!~-~{y_)(V\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"W5fiYe@9N:0AGpf$1*/R\"><field name=\"NUM\">12</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"$AYlM;i[Uw1=a+-7hxI6\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"=6Ru@E+yt*K1R@0fDl6@\"><field name=\"NUM\">135</field></shadow></value><next><block type=\"v5_sensing_set_digital_out\" id=\"jT/$ae2E0l9T|4m:C76*\"><field name=\"DIGITALOUT\">SolonoidR</field><field name=\"STATE\">low</field><next><block type=\"v5_drivetrain_turn_for\" id=\"Wp4iv5D=G#Umh.q.bN54\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"h?Cz5Jr)8oEaoMD:P)J+\"><field name=\"NUM\">30</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"%WvlJ|%J4XD[1#2CF6Or\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Qx^hxa~qOT@MA%_^/.JU\"><field name=\"NUM\">40</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"r;y?b(vjpYOK$*?MEr/a\" x=\"-389\" y=\"3390\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonB</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\"nGXuv(YA5*5[)6F9XRk]\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"r;4.(EXn02Lk?L=y2$vi\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"?2:6u(B=H]fkyp}pl;%d\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonA</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then\" id=\"?BQ9[QQmolvZ0d|-Xp4~\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\":B.rIMr4a*ZcDez,-%.q\"><field name=\"VARIABLE\" id=\"Jf*O)alFb`^3V?yo-SEv\" variabletype=\"boolean\">launcherOn</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"F-4q;ZnQhL3:rgNE)ZWv\"><field name=\"MOTOR\">MtrGrpLauncher</field><next><block type=\"v5_variables_set_boolean_variable\" id=\".sW(sO_C?]FXa`d:!9ol\"><field name=\"VARIABLE\" id=\"Jf*O)alFb`^3V?yo-SEv\" variabletype=\"boolean\">launcherOn</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"^]4,gFj`i(aWBh%WnAS(\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></statement><next><block type=\"v5_motion_spin\" id=\":5x`Ki2Ij+`u[X/|FyYn\"><field name=\"MOTOR\">MtrGrpLauncher</field><field name=\"DIRECTION\">rev</field></block></next></block></statement><next><block type=\"v5_control_wait_until\" id=\"4FD[^uu~DMotg_=o[%b.\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\".4|EOlu$!3V2QlH|5J?6\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"dSx:H.`kHv]E!bNfB!xV\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonB</field></block></value></block></value></block></next></block></next></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"930\" y=\"3450\"><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"Qq)Ady0E:XAluU=!?C=s\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"*hF6P]Tw661_zX,{6)vV\"><field name=\"NUM\">85</field></shadow></value><next><block type=\"v5_sensing_set_digital_out\" id=\"m{rWT+*{321VJ-q:o~Ak\"><field name=\"DIGITALOUT\">SolonoidR</field><field name=\"STATE\">low</field><next><block type=\"v5_sensing_set_digital_out\" id=\"ulcXn$yMf13AYO,;*na`\"><field name=\"DIGITALOUT\">SolonoidL</field><field name=\"STATE\">low</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"KJ`6[mRj`Pe}k)x|prp4\"><field name=\"MOTOR\">MtrGrpLauncher</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\")xkAq^.bxuTg1f1.}8Js\"><field name=\"NUM\">60</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"g3:+F5!bS574Cz3DCWEM\"><field name=\"MOTOR\">MtrGrpLauncher</field><field name=\"MODE\">hold</field></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"RoL_`xePSUM_q{sM+/rg\" x=\"-370\" y=\"3950\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\"/u68qXaO6js_;Qx@`N):\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"b`yz-llEp+`$=_d`WBUN\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonX</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"}b]}vZ0zI?kaFiGSVt2B\"><field name=\"DIGITALOUT\">SolonoidR</field><field name=\"STATE\">low</field><next><block type=\"v5_sensing_set_digital_out\" id=\"M`jL-_Cq#bh]skHEg^Dr\"><field name=\"DIGITALOUT\">SolonoidL</field><field name=\"STATE\">low</field></block></next></block></statement></block></next></block><block type=\"v5_events_when_controller_button\" id=\"V$N`28gq*R[)U@6Zc()I\" x=\"230\" y=\"3930\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\"tL[#-H_9Q(V,$bB}*{Dh\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"^~rqzmO=fR%Bx,WyX[7l\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"exDx.5WivUy=|s.@{K%R\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"tqk{kM7^%!$$/?WhLZS/\"><field name=\"DIGITALOUT\">SolonoidR</field><field name=\"STATE\">low</field></block></statement></block></next></block><block type=\"v5_events_when_controller_button\" id=\"l6,!a+h,ohu4oSEA[-gY\" x=\"910\" y=\"3930\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\"~XIu@TW%j%:KRnw`eS([\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"j3Y{`HI-jzE[5C@P`Uk-\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"|Ohes)4?a*xbYg1?K#7L\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"y!uY_IX2,Yj3Sm0n8#~a\"><field name=\"DIGITALOUT\">SolonoidL</field><field name=\"STATE\">low</field></block></statement></block></next></block><block type=\"v5_events_when_controller_button\" id=\"5cgZ.$o*/qHna`E#Z8CM\" x=\"-370\" y=\"4230\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\"GPN$qfR4:HDt)H?#t~4~\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"2Jf|iDHEtTtqCdtl}46%\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonX</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"^MX]01TTqbnSE);$[L+4\"><field name=\"DIGITALOUT\">SolonoidR</field><field name=\"STATE\">high</field><next><block type=\"v5_sensing_set_digital_out\" id=\"*2`osr)Jc5Y`;CO8rp%b\"><field name=\"DIGITALOUT\">SolonoidL</field><field name=\"STATE\">high</field></block></next></block></statement></block></next></block><block type=\"v5_events_when_controller_button\" id=\"xV@x!,D04^d$*Vjpx.%k\" x=\"230\" y=\"4230\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\"fq72`3eSg;1gwej5jr}o\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"aKUlR?~,],1j2J9!(%)I\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"K%A-t)jK6ervFET)Kwbn\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"6|,dM9ANdJ;Qqz?JZo~P\"><field name=\"DIGITALOUT\">SolonoidR</field><field name=\"STATE\">high</field></block></statement></block></next></block><block type=\"v5_events_when_controller_button\" id=\"^e@9eT-xn?*k2*?ZX:rl\" x=\"910\" y=\"4210\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_if_then\" id=\";]zVEeaxIM+m5^hP-MbX\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"uj4p3oQ21@n)%kR^)bp9\"><value name=\"OPERAND\"><block type=\"v5_sensing_pressing_controller\" id=\"n_7v=4L=g,(h7zk1QL`J\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"5zNXWQ9+r7%f[iK4~#s]\"><field name=\"DIGITALOUT\">SolonoidL</field><field name=\"STATE\">high</field></block></statement></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"split","id":"primary"},"triportSourcePort":22},{"port":[1,4,6,8,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"7:3","direction":"rev","gyroType":"none","width":"10.25","unit":"in","wheelbase":"0.39","wheelbaseUnit":"in","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[10,9],"name":"MtrGrpLauncher","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"backward","gear":"ratio36_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[1],"name":"SolonoidR","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[8],"name":"SolonoidL","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[3,4],"name":"EncoderC","customName":false,"deviceType":"Encoder","deviceClass":"encoder","setting":{"id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor leftMotorA = motor(PORT1, ratio18_1, true);\nmotor leftMotorB = motor(PORT4, ratio18_1, true);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT6, ratio18_1, false);\nmotor rightMotorB = motor(PORT8, ratio18_1, false);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 260.34999999999997, 9.906, mm, 2.3333333333333335);\n\nmotor MtrGrpLauncherMotorA = motor(PORT10, ratio36_1, true);\nmotor MtrGrpLauncherMotorB = motor(PORT9, ratio36_1, false);\nmotor_group MtrGrpLauncher = motor_group(MtrGrpLauncherMotorA, MtrGrpLauncherMotorB);\n\ndigital_out SolonoidR = digital_out(Brain.ThreeWirePort.A);\ndigital_out SolonoidL = digital_out(Brain.ThreeWirePort.H);\nencoder EncoderC = encoder(Brain.ThreeWirePort.C);\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3 + Axis1\n      // right = Axis3 - Axis1\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position() + Controller1.Axis1.position();\n      int drivetrainRightSideSpeed = Controller1.Axis3.position() - Controller1.Axis1.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\n// User defined function\nvoid myblockfunction_fireOne();\n\nbool launcherOn, centerLock, autonStarted, autonEnable;\n\nevent CenterStop = event();\n\n// User defined function\nvoid myblockfunction_fireOne() {\n  EncoderC.setRotation(0.0, degrees);\n  MtrGrpLauncher.spin(forward);\n  waitUntil((fabs(static_cast<float>(EncoderC.rotation(degrees))) > 340.0));\n  MtrGrpLauncher.stop();\n}\n\n// \"when Controller1 ButtonY pressed\" hat block\nvoid onevent_Controller1ButtonY_pressed_0() {\n  myblockfunction_fireOne();\n}\n\n// \"when driver control\" hat block\nint ondriver_drivercontrol_0() {\n  launcherOn = false;\n  return 0;\n}\n\n// \"when Controller1 ButtonA pressed\" hat block\nvoid onevent_Controller1ButtonA_pressed_0() {\n  if (!Controller1.ButtonB.pressing()) {\n    if (launcherOn) {\n      MtrGrpLauncher.stop();\n      launcherOn = false;\n    }\n    else {\n      MtrGrpLauncher.spin(forward);\n      launcherOn = true;\n    }\n  }\n  waitUntil((!Controller1.ButtonA.pressing()));\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  Drivetrain.driveFor(forward, 31.0, inches, true);\n  Drivetrain.driveFor(reverse, 31.0, inches, true);\n  Drivetrain.turnFor(right, 50.0, degrees, true);\n  SolonoidR.set(true);\n  Drivetrain.driveFor(forward, 12.0, inches, true);\n  Drivetrain.turnFor(left, 135.0, degrees, true);\n  SolonoidR.set(false);\n  Drivetrain.turnFor(left, 30.0, degrees, true);\n  Drivetrain.driveFor(forward, 40.0, inches, true);\n  return 0;\n}\n\n// \"when Controller1 ButtonB pressed\" hat block\nvoid onevent_Controller1ButtonB_pressed_0() {\n  if (!Controller1.ButtonA.pressing()) {\n    if (launcherOn) {\n      MtrGrpLauncher.stop();\n      launcherOn = false;\n    }\n    MtrGrpLauncher.spin(reverse);\n  }\n  waitUntil((!Controller1.ButtonB.pressing()));\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Drivetrain.setDriveVelocity(85.0, percent);\n  SolonoidR.set(false);\n  SolonoidL.set(false);\n  MtrGrpLauncher.setVelocity(60.0, percent);\n  MtrGrpLauncher.setStopping(hold);\n  return 0;\n}\n\n// \"when Controller1 ButtonDown pressed\" hat block\nvoid onevent_Controller1ButtonDown_pressed_0() {\n  if (Controller1.ButtonX.pressing()) {\n    SolonoidR.set(false);\n    SolonoidL.set(false);\n  }\n}\n\n// \"when Controller1 ButtonR1 pressed\" hat block\nvoid onevent_Controller1ButtonR1_pressed_0() {\n  if (!Controller1.ButtonR2.pressing()) {\n    SolonoidR.set(false);\n  }\n}\n\n// \"when Controller1 ButtonL1 pressed\" hat block\nvoid onevent_Controller1ButtonL1_pressed_0() {\n  if (!Controller1.ButtonL2.pressing()) {\n    SolonoidL.set(false);\n  }\n}\n\n// \"when Controller1 ButtonUp pressed\" hat block\nvoid onevent_Controller1ButtonUp_pressed_0() {\n  if (Controller1.ButtonX.pressing()) {\n    SolonoidR.set(true);\n    SolonoidL.set(true);\n  }\n}\n\n// \"when Controller1 ButtonR2 pressed\" hat block\nvoid onevent_Controller1ButtonR2_pressed_0() {\n  if (!Controller1.ButtonR1.pressing()) {\n    SolonoidR.set(true);\n  }\n}\n\n// \"when Controller1 ButtonL2 pressed\" hat block\nvoid onevent_Controller1ButtonL2_pressed_0() {\n  if (!Controller1.ButtonL1.pressing()) {\n    SolonoidL.set(true);\n  }\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n  vex::task drive0(ondriver_drivercontrol_0);\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  drive0.stop();\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // register event handlers\n  Controller1.ButtonY.pressed(onevent_Controller1ButtonY_pressed_0);\n  Controller1.ButtonA.pressed(onevent_Controller1ButtonA_pressed_0);\n  Controller1.ButtonB.pressed(onevent_Controller1ButtonB_pressed_0);\n  Controller1.ButtonDown.pressed(onevent_Controller1ButtonDown_pressed_0);\n  Controller1.ButtonR1.pressed(onevent_Controller1ButtonR1_pressed_0);\n  Controller1.ButtonL1.pressed(onevent_Controller1ButtonL1_pressed_0);\n  Controller1.ButtonUp.pressed(onevent_Controller1ButtonUp_pressed_0);\n  Controller1.ButtonR2.pressed(onevent_Controller1ButtonR2_pressed_0);\n  Controller1.ButtonL2.pressed(onevent_Controller1ButtonL2_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}